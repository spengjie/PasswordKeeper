<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PasswordKeeper">
    
    <!--Colors-->
    <Color x:Key="BackgroundHighlightColor">#88DADADA</Color>
    <SolidColorBrush x:Key="BackgroundHighlightColorBrush" Color="{StaticResource BackgroundHighlightColor}"/>
    <Color x:Key="SidebarBackgroundColor">#FFFAFAFA</Color>
    <SolidColorBrush x:Key="SidebarBackgroundColorBrush" Color="{StaticResource SidebarBackgroundColor}"/>
    <!--<Color x:Key="MainColor">#000</Color>-->
    <!--<Color x:Key="MainColor">#FF16A085</Color>-->
    <!--<Color x:Key="MainColor">#FFFF5B60</Color>-->
    <Color x:Key="MainColor">#2080F0</Color>
    <SolidColorBrush x:Key="MainColorBrush" Color="{StaticResource MainColor}"/>
    <SolidColorBrush x:Key="LightMainColorBrush" Color="{Binding Converter={StaticResource LightColorConverter}, Source={StaticResource MainColor}}"/>
    <Color x:Key="AuxiliaryColor">#FFE8E6E5</Color>
    <SolidColorBrush x:Key="AuxiliaryColorBrush" Color="{StaticResource AuxiliaryColor}"/>
    <!--ListBox Color-->
    <Color x:Key="ListBoxBackgroundColor">#F6F6F6</Color>
    <SolidColorBrush x:Key="ListBoxBackgroundColorBursh" Color="{StaticResource ListBoxBackgroundColor}"/>
    <SolidColorBrush x:Key="ListBoxItemBackgoundColorBrush" Color="White"/>

    <!--Styles-->
    <Style x:Key="CustomWindow" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="-1" CaptionHeight="0" ResizeBorderThickness="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource MainColorBrush}" BorderThickness="0" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#333"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="TitleBar" Grid.Row="0" Height="32" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{StaticResource AuxiliaryColorBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btnChangeSkin" Grid.Column="1" HorizontalAlignment="Right" Height="32" Width="32" Margin="0,0,32,0" Style="{DynamicResource MainColorButtonStyle}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource SkinIcon}}" Command="{Binding ChangeSkinCommand}" CommandParameter="{Binding ElementName=MainWD}"/>
                                <Button x:Name="btnClose" Grid.Column="1" HorizontalAlignment="Right" Height="32" Width="32" Style="{DynamicResource RedButtonStyle}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource CloseIcon}}" local:PathDataDependencyClass.SizeForPath="16"  Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=MainWD}"/>
                            </Grid>
                            <!--<ContentPresenter Grid.RowSpan="2" Grid.ColumnSpan="2"/>-->
                            <TabControl x:Name="BoxViewModels" Grid.RowSpan="2" Grid.ColumnSpan="2" SelectedIndex="0" SelectedItem="{Binding SelectedBoxViewModel}" ItemsSource="{Binding BoxViewModels}" IsManipulationEnabled="False"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainColorButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="PART_content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.FontSize="{TemplateBinding FontSize}"/>
                        <Viewbox Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.SizeForPath)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.SizeForPath)}">
                            <Path x:Name="PART_Path" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.Path)}"/>
                        </Viewbox>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFADB2B5"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(local:PathDataDependencyClass.Path)}" Value="{x:Null}">
                            <Setter TargetName="PART_content" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFCB1C15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="PART_content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.FontSize="{TemplateBinding FontSize}"/>
                        <Viewbox Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.SizeForPath)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.SizeForPath)}">
                            <Path x:Name="PART_Path" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.Path)}"/>
                        </Viewbox>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FFCB1C15" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FFB81B1B" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(local:PathDataDependencyClass.Path)}" Value="{x:Null}">
                            <Setter TargetName="PART_content" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainColorButtonStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border x:Name="Bd" BorderThickness="0" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Viewbox Height="16">
                                <Path x:Name="PART_Path" Data="{StaticResource RoundCloseIcon}" Fill="#BBB"/>
                            </Viewbox>
                        </Border>
                        <ContentPresenter Content=" " HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="#999" Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="#888" Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderMainColorButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border x:Name="Bd" BorderThickness="1" BorderBrush="{StaticResource MainColorBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainColorWithoutBackgroudButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource LightMainColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="PART_content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.FontSize="{TemplateBinding FontSize}"/>
                        <Viewbox Width="16" Height="16">
                            <Path x:Name="PART_Path" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.Path)}"/>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(local:PathDataDependencyClass.Path)}" Value="{x:Null}">
                            <Setter TargetName="PART_content" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ErrorTemplate">
        <AdornedElementPlaceholder>
            <Rectangle StrokeDashArray="3 3" Stroke="Red" StrokeThickness="1"></Rectangle>
            <!--<Border BorderBrush="Red" BorderThickness="1"/>-->
        </AdornedElementPlaceholder>
    </ControlTemplate>
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3,3,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Bd" Background="{StaticResource ListBoxBackgroundColorBursh}" BorderBrush="{StaticResource AuxiliaryColorBrush}" BorderThickness="0">
                        <Grid>
                            <TextBlock x:Name="WatermarkText" Text="{TemplateBinding Tag}" Foreground="Gray" TextAlignment="Left" Visibility="Collapsed" Cursor="IBeam" Padding="3,0,0,0" VerticalAlignment="Center"/>
                            <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource AuxiliaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource AuxiliaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter Property="Visibility" TargetName="WatermarkText" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}" Content="{Binding Path=(Validation.Errors)[0].ErrorContent}" Background="Red"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="Bd" Background="Transparent" BorderBrush="{StaticResource AuxiliaryColorBrush}" BorderThickness="1">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource LightMainColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CopyButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainColorWithoutBackgroudButtonStyle}">
        <Setter Property="local:PathDataDependencyClass.Path" Value="{StaticResource CopyIcon}"/>
    </Style>
    <Style TargetType="{x:Type local:CopyableTextBlock}">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="CopyButtonStyle" Value="{StaticResource CopyButtonStyle}"/>
    </Style>
    <Style x:Key="DottedLineButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource AuxiliaryColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Rectangle x:Name="Bd" StrokeThickness="1" Stroke="{StaticResource AuxiliaryColorBrush}" StrokeDashArray="3,3"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="Bd" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Bd" Value="{StaticResource LightMainColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource LightMainColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="Bd" Value="{StaticResource MainColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainColorCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        <Viewbox Width="20" Height="20">
                            <Path x:Name="PART_Path" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:PathDataDependencyClass.Path)}"/>
                        </Viewbox>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource MainColor}" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.15"></ColorAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel" To="{StaticResource MainColor}" Duration="00:00:0.2">
                            </ColorAnimation>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel" To="{StaticResource MainColor}" Duration="00:00:0.2">
                            </ColorAnimation>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckFlag" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <HorizontalAlignment>Right</HorizontalAlignment>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckFlag" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <HorizontalAlignment>Left</HorizontalAlignment>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsPressed">
                            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel" To="#DDDDDD" Duration="00:00:0.2">
                            </ColorAnimation>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel" To="#DDDDDD" Duration="00:00:0.2">
                            </ColorAnimation>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#DDDDDD"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ForegroundPanel">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#DDDDDD"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsPressedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="23"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" HorizontalAlignment="Stretch">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            <Border x:Name="ForegroundPanel" Background="White" BorderThickness="1" Width="34" Height="20" CornerRadius="10" BorderBrush="#DDDDDD" VerticalAlignment="Center" HorizontalAlignment="Right">
                                <StackPanel>
                                    <Border Background="White" x:Name="CheckFlag" CornerRadius="9" VerticalAlignment="Center" BorderThickness="0" Width="18" Height="18" BorderBrush="Gray">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="0" BlurRadius="2" Color="#EEEEEE"/>
                                        </Border.Effect>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Padding" Value="5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="StoryboardIsPressedTrue" Storyboard="{StaticResource StoryboardIsPressed}" />
                                <RemoveStoryboard BeginStoryboardName="StoryboardIsPressedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="StoryboardIsPressedFalse" Storyboard="{StaticResource StoryboardIsPressedOff}" />
                                <RemoveStoryboard BeginStoryboardName="StoryboardIsPressedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="ForegroundPanel" Height="20" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Padding" Value="5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="BorderBrush" Value="{StaticResource MainColorBrush}"/>
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="BorderBrush" Value="{StaticResource MainColorBrush}"/>
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{StaticResource MainColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource MainColorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="VerticalOffset" Value="4"/>
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget, Converter={StaticResource TrimmedTextBlockVisibilityConverter}}"/>
        <Setter Property="HorizontalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CenterToolTipConverter}">
                    <Binding RelativeSource="{RelativeSource Self}" Path="PlacementTarget.ActualWidth"/>
                    <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <StackPanel>
                        <Path Data="M0,8 4,0 8,8" VerticalAlignment="Top" HorizontalAlignment="Center" Fill="{TemplateBinding Background}"/>
                        <Border Background="{TemplateBinding Background}" Padding="8">
                            <ContentPresenter/>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid HorizontalAlignment="Right">
                        <Rectangle x:Name="thumb" Fill="{StaticResource AuxiliaryColorBrush}" RadiusX="0" RadiusY="0" Width="10"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="thumb" Property="Fill" Value="{StaticResource MainColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" HorizontalAlignment="Right">
                        <Rectangle Stretch="Fill" Fill="{StaticResource ListBoxItemBackgoundColorBrush}"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.Thumb>
                                <Thumb x:Name="PART_Thumb" Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="10"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="Auto"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="GroupItem">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupItem">
                    <StackPanel>
                        <StackPanel.Effect>
                            <DropShadowEffect Direction="270" ShadowDepth="1" Color="{StaticResource AuxiliaryColor}"/>
                        </StackPanel.Effect>
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="PART_Header"/>
                        <ItemsPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Views-->
    <DataTemplate x:Key="NormalModeTemplate">
        <Grid MinHeight="36" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <Grid DataContext="{Binding AccountInfo}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <local:CopyableTextBlock Grid.Column="0" Text="{Binding Username}"/>
                    <local:CopyableTextBlock Grid.Column="1" Text="{Binding Password}"/>
                    <ListBox Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding ExtendAttributes}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Template>
                            <ControlTemplate TargetType="{x:Type ListBox}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Name}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="1" Text=": " VerticalAlignment="Center"/>
                                    <local:CopyableTextBlock Grid.Column="2" Text="{Binding Value}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <ListBox ItemsSource="{Binding MyTagsView}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.Template>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border MinWidth="24" Margin="3,0,0,3">
                                <Button Content="{Binding}" Background="{StaticResource AuxiliaryColorBrush}" BorderThickness="0" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="2" Command="{Binding DataContext.TagFilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" CommandParameter="{Binding}" Cursor="Hand" FontSize="12"/>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </StackPanel>
            <Button x:Name="btnEdit" Grid.Column="1" Width="40" Style="{DynamicResource MainColorButtonStyle}" Command="{Binding EditCommand}" Visibility="Collapsed" local:PathDataDependencyClass.Path="{StaticResource EditIcon}"/>
            <Button x:Name="btnDelete" Grid.Column="2" Width="40" Style="{DynamicResource RedButtonStyle}" Command="{Binding DataContext.RemoveAccountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" Visibility="Collapsed" local:PathDataDependencyClass.Path="{Binding Source={StaticResource DeleteIcon}}"/>

        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="btnEdit" Property="Visibility" Value="Visible"/>
                <Setter TargetName="btnDelete" Property="Visibility" Value="Visible"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="EditModeTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <Grid DataContext="{Binding EditingData}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBox Grid.Column="0" Grid.Row="0" Style="{DynamicResource TextBoxStyle}" Text="{Binding Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Tag="Name"/>
                    <TextBox Grid.Column="1" Grid.Row="0" Style="{DynamicResource TextBoxStyle}" Text="{Binding URL}" Tag="URL"/>
                    <TextBox Grid.Column="0" Grid.Row="1" Style="{DynamicResource TextBoxStyle}" Text="{Binding Username, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Tag="Username"/>
                    <TextBox Grid.Column="1" Grid.Row="1" Style="{DynamicResource TextBoxStyle}" Text="{Binding Password, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Tag="Password"/>
                    <ListBox Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding ExtendAttributes}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Template>
                            <ControlTemplate TargetType="{x:Type ListBox}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Style="{DynamicResource TextBoxStyle}" Text="{Binding Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Tag="Attrubute Name"/>
                                    <TextBox Grid.Column="1" Style="{DynamicResource TextBoxStyle}" Text="{Binding Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Tag="Attrubute Value"/>
                                    <Button x:Name="btnDeleteAttribute" Width="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}" Grid.Column="2"
                                        Style="{StaticResource RedButtonStyle}" Command="{Binding DataContext.RemoveAttributeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" CommandParameter="{Binding}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource DeleteIcon}}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <Button x:Name="btnAddAttribute" Margin="1" Style="{DynamicResource DottedLineButtonStyle}" Command="{Binding AddAttributeCommand}">Add Attribute
                </Button>
                <ListBox Margin="1" ItemsSource="{Binding TagsView}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.Template>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <WrapPanel>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Button Margin="3,0,0,3" Padding="3,0" Visibility="{Binding TagEditing, Converter={StaticResource FalseToVisibleConverter}}" Command="{Binding AddTagCommand}" Style="{DynamicResource DottedLineButtonStyle}">
                                    <Viewbox>
                                        <Path Data="{StaticResource AddIcon}" Fill="{StaticResource MainColorBrush}"/>
                                    </Viewbox>
                                </Button>
                                <TextBox Margin="3,0,50,3" MinWidth="68" Height="24" Tag="Tag Name" Visibility="{Binding TagEditing, Converter={StaticResource TrueToVisibleConverter}}" Style="{DynamicResource TextBoxStyle}">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                                    <Button Grid.Column="1" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Center" local:PathDataDependencyClass.SizeForPath="16" local:PathDataDependencyClass.Path="{Binding Source={StaticResource RoundYesIcon}}" Style="{DynamicResource MainColorButtonStyle}" Command="{Binding SaveTagEditCommand}" CommandParameter="{TemplateBinding Text}"/>
                                                    <Button Grid.Column="2" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Center" local:PathDataDependencyClass.SizeForPath="16" local:PathDataDependencyClass.Path="{Binding Source={StaticResource RoundNoIcon}}" Style="{DynamicResource RedButtonStyle}" Command="{Binding CancelTagEditCommand}"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </WrapPanel>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border MinWidth="24" Margin="3,0,0,3" Background="{StaticResource AuxiliaryColorBrush}" CornerRadius="0">
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Padding="2" Style="{DynamicResource SelectedCheckBox}"/>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </StackPanel>
            <Button x:Name="btnSave" Grid.Column="1" Width="40" Style="{DynamicResource MainColorButtonStyle}" Command="{Binding DataContext.SaveEditAccountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource YesIcon}}"/>
            <Button x:Name="btnCancel" Grid.Column="2" Width="40" Style="{DynamicResource RedButtonStyle}" Command="{Binding DataContext.CancelEditAccountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource NoIcon}}"/>
        </Grid>
    </DataTemplate>
    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="20,0"/>
        <Setter Property="Background" Value="{StaticResource ListBoxItemBackgoundColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="PART_Bd" Background="{TemplateBinding Background}" BorderThickness="0,1,0,0" BorderBrush="{StaticResource AuxiliaryColorBrush}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding EditState}" Value="{x:Static local:EnumViewState.Normal}">
                            <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{StaticResource NormalModeTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EditState}" Value="{x:Static local:EnumViewState.EditingExisting}">
                            <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{StaticResource EditModeTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EditState}" Value="{x:Static local:EnumViewState.EditingNew}">
                            <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{StaticResource EditModeTemplate}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0"/>
            <Border x:Name="SettingsPane" Grid.Column="1" VerticalAlignment="Top" Padding="0,20,20,20" Visibility="{Binding Converter={StaticResource TrueToVisibleConverter},ElementName=cbSettings, Path=IsChecked}">
                <Border.Effect>
                    <DropShadowEffect Direction="270" ShadowDepth="1" Color="{StaticResource AuxiliaryColor}"/>
                </Border.Effect>
                <Border Padding="10" Width="215" Background="{StaticResource ListBoxItemBackgoundColorBrush}">
                    <StackPanel VerticalAlignment="Top">
                        <CheckBox x:Name="cbIsAuthenEnabled" Style="{DynamicResource SliderCheckBox}" Height="24" IsChecked="{Binding BoxInfo.IsAuthenEnabled}">Enable Authentication</CheckBox>
                        <TextBox Style="{DynamicResource TextBoxStyle}" Margin="0,10,0,0" Height="24" MaxLength="4" Text="{Binding BoxInfo.LoginPassword}" Visibility="{Binding ElementName=cbIsAuthenEnabled, Path=IsChecked, Converter={StaticResource TrueToVisibleConverter}}"></TextBox>
                        <TextBox Style="{DynamicResource TextBoxStyle}" Margin="0,10,0,0" Height="24" Text="{Binding BoxInfo.LoginPrompt}" Visibility="{Binding ElementName=cbIsAuthenEnabled, Path=IsChecked, Converter={StaticResource TrueToVisibleConverter}}"></TextBox>
                    </StackPanel>
                </Border>
            </Border>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="GroupStyleHeaderTemplate">
        <StackPanel DataContext="{Binding Items}" Margin="20,10,20,0" Orientation="Horizontal" Background="White" Height="28">
            <Image Width="16" Source="{Binding Icon}" Margin="4,0"/>
            <TextBlock Tag="Name" Foreground="{Binding Converter={StaticResource ImageToColorConverter}, Path=Icon, ConverterParameter={StaticResource MainColorBrush}}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Padding="4,3,0,3" VerticalAlignment="Center">
                <Hyperlink NavigateUri="{Binding AccountInfo.URL}" Command="{Binding OpenUrlCommand}">
                    <TextBlock Text="{Binding AccountInfo.Name}" TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                    <Hyperlink.Style>
                        <Style TargetType="Hyperlink">
                            <Setter Property="TextDecorations" Value="None"/>
                            <Setter Property="Foreground" Value="{Binding Converter={StaticResource ImageToColorConverter}, Path=Icon, ConverterParameter={StaticResource MainColorBrush}, Mode=TwoWay}"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextDecorations" Value="Underline"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Hyperlink.Style>
                </Hyperlink></TextBlock>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StartTabHeaderTemplate">
    <TextBlock Text="Start"/>
    </DataTemplate>
    <DataTemplate x:Key="StartTabContentTemplate">
        <Grid x:Name="StartView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="48"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button Name="btnCreateBox" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding DataContext.CreateBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Height="36" Width="200" Style="{DynamicResource BorderMainColorButtonStyle}" IsDefault="True">Create a box file</Button>
            <Button Name="btnOpenBox" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding DataContext.OpenBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Height="36" Width="200" Style="{DynamicResource BorderMainColorButtonStyle}">Open a existing box file</Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="itemHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Name}" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource {x:Type TextBlock}}" ToolTip="{Binding BoxFilePath}" local:AlwaysShowToolTipDependencyClass.AlwaysShowToolTip="True"/>
            <Button x:Name="btnCloseBox" Grid.Column="1" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding DataContext.CloseBoxCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" Visibility="Collapsed" Style="{StaticResource RedButtonStyle}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource CloseIcon}}"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsMouseOver}" Value="True">
                <Setter TargetName="btnCloseBox" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="itemContentTemplate">
        <Grid>
            <Grid x:Name="LoginView" Panel.ZIndex="1" Background="White" Visibility="{Binding Converter={StaticResource FalseToVisibleConverter}, Path=IsLogined}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <local:FourGridsPasswordBox x:Name="LoginPasswordBox" Grid.Column="1" Grid.Row="1" Height="36" Width="180" VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding LoginCommand}" PasswordBoxStyle="{DynamicResource PasswordBoxStyle}">
                </local:FourGridsPasswordBox>
                <Label Grid.Column="2" Grid.Row="1" Height="36" Width="36" HorizontalAlignment="Left" Visibility="{Binding Converter={StaticResource EmptyStringToVisibilityConverter}, Path=BoxInfo.LoginPrompt}" local:AlwaysShowToolTipDependencyClass.AlwaysShowToolTip="True" ToolTip="{Binding BoxInfo.LoginPrompt}">
                    <Viewbox>
                        <Path Data="{Binding Source={StaticResource InfoIcon}}" Fill="{StaticResource MainColorBrush}"></Path>
                    </Viewbox>
                </Label>
                <Label x:Name="LoginError" Grid.Column="1" Grid.Row="2" Height="36" Width="180" Margin="0,10,0,0" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding LoginError}" Background="#FFCB1C15" Foreground="White" Visibility="{Binding Converter={StaticResource EmptyStringToVisibilityConverter}, Path=LoginError}"/>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <!--these are the triggers that make the code cursor jump from box 1 to box 2 to box 3.-->
                            <DataTrigger Binding="{Binding ElementName=LoginPasswordBox, Path=Visibility}" Value="Visible">
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=LoginPasswordBox}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=LoginPasswordBox, Path=Visibility}" Value="Collapsed">
                                <Setter Property="FocusManager.FocusedElement" Value="{x:Null}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <Grid Name="AccountsView">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ListBox x:Name="AccountsPane" Grid.Row="1" BorderBrush="{StaticResource MainColorBrush}" Background="{StaticResource ListBoxBackgroundColorBursh}" ItemsSource="{Binding AccountsView}" ItemContainerStyle="{StaticResource ListBoxItemStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.GroupStyle>
                        <GroupStyle HeaderTemplate="{StaticResource GroupStyleHeaderTemplate}">
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <local:AnimatedPanel IsItemsHost="True" Width="auto"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                    <ListBox.Template>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer x:Name="AccountViewScroller" Template="{DynamicResource ScrollViewerControlTemplate}" Background="{TemplateBinding Background}" CanContentScroll="False">
                                <ItemsPresenter Grid.Column="0" Margin="0,10,0,20" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListBox.Template>
                </ListBox>
                <Grid Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="ToolsPane" Height="36" Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Effect>
                        <DropShadowEffect Direction="270" ShadowDepth="1" Color="{StaticResource AuxiliaryColor}"/>
                    </Grid.Effect>
                    <Button x:Name="btnAdd" Grid.Column="0" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Style="{DynamicResource MainColorButtonStyle}" Command="{Binding AddAccountCommand}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource AddIcon}}"/>
                    <TextBox x:Name="txtBoxFilter" Grid.Column="1" Width="250" Height="24" Margin="32,0,0,0" HorizontalAlignment="Left" Background="{StaticResource ListBoxBackgroundColorBursh}" VerticalContentAlignment="Center" VerticalAlignment="Stretch" Text="{Binding FilterString}">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding FilterCommand}" CommandParameter="{Binding ElementName=txtBoxFilter, Path=Text}" Key="Enter"/>
                        </TextBox.InputBindings>
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Viewbox Height="20" Margin="2">
                                                        <Path Fill="{StaticResource MainColorBrush}" Data="{Binding Source={StaticResource FilterIcon}}"/>
                                                    </Viewbox>
                                                    <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"/>
                                                    <Button x:Name="btnClearFilterResult" Grid.Column="2" Height="22" Width="22" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{DynamicResource ClearButtonStyle}" Command="{Binding ClearFilterCommand}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource TrueToVisibleConverter}}"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <CheckBox x:Name="cbSettings" Grid.Column="2" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Style="{DynamicResource MainColorCheckBoxStyle}" Command="{Binding SaveLoginInfoCommand}" local:PathDataDependencyClass.Path="{Binding Source={StaticResource SettingsIcon}}"/>
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <!--View Styles-->
    <local:TabItemTemplateSelector x:Key="headerTemplateSelector" ItemTemplate="{StaticResource itemHeaderTemplate}" NewButtonTemplate="{StaticResource StartTabHeaderTemplate}" />
    <local:TabItemTemplateSelector x:Key="contentTemplateSelector" ItemTemplate="{StaticResource itemContentTemplate}" NewButtonTemplate="{StaticResource StartTabContentTemplate}"/>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource MainColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource SidebarBackgroundColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Bd" Margin="2,4,2,0" Padding="10,0,0,0" Height="28" Width="100" BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Stretch" ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Bd" Property="Background" Value="{StaticResource LightMainColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Bd" Property="Background" Value="{StaticResource MainColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="ItemTemplateSelector" Value="{StaticResource headerTemplateSelector}"/>
        <Setter Property="ContentTemplateSelector" Value="{StaticResource contentTemplateSelector}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="Panel" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="64"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Width="24" Height="24">
                                <Path Data="M249.6 524.8 761.6 524.8 249.6 524.8ZM848 352c0-16-6.4-35.2-19.2-48l-3.2-3.2C816 294.4 803.2 288 790.4 288L544 185.6c-25.6-12.8-41.6-12.8-64 0L236.8 288C220.8 288 208 294.4 198.4 304l-3.2 0C192 307.2 188.8 310.4 185.6 316.8c-6.4 9.6-9.6 22.4-9.6 35.2l0 320c0 0 0 0 0 0 0 16 6.4 32 19.2 44.8l3.2 0C208 729.6 220.8 736 236.8 736l243.2 102.4c9.6 6.4 16 6.4 25.6 9.6 3.2 0 6.4 3.2 6.4 3.2 3.2 0 6.4 0 6.4-3.2 6.4 0 16-3.2 22.4-9.6l243.2-102.4c16 0 28.8-6.4 41.6-16l0 0c0 0 0 0 0 0 12.8-12.8 19.2-28.8 19.2-44.8L848 352C848 352 848 352 848 352zM233.6 320l256-105.6c16-9.6 25.6-12.8 44.8 0l256 105.6c0 0 0 0 0 0l-278.4 128c0 0-3.2 0-3.2 0 0 0 0 0-3.2 0l-284.8-124.8C227.2 323.2 230.4 320 233.6 320zM489.6 806.4 233.6 704c-6.4 0-9.6-3.2-12.8-6.4l-3.2-3.2c-6.4-6.4-9.6-16-9.6-22.4 0 0 0 0 0 0L208 352l288 124.8c0 0 0 0 0 0l0 332.8C492.8 809.6 492.8 809.6 489.6 806.4zM816 672c0 9.6-3.2 16-9.6 22.4 0 0 0 0 0 0l0 0C800 700.8 793.6 704 787.2 704l-252.8 102.4c-3.2 0-3.2 3.2-6.4 3.2L528 476.8l288-131.2c0 0 0 3.2 0 3.2 0 0 0 0 0 0L816 672z" Fill="{StaticResource MainColorBrush}"></Path>
                            </Viewbox>
                            <WrapPanel Grid.Column="2">
                                <ScrollViewer x:Name="scrollviewer" HorizontalScrollBarVisibility="Auto">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <ScrollContentPresenter Height="Auto" VerticalAlignment="Center"/>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <TabPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </WrapPanel>
                            <RepeatButton x:Name="ToLeftButton" Grid.Column="1" Width="0" Height="28" VerticalAlignment="Bottom" Opacity="1" Visibility="Hidden" Command="{x:Static ScrollBar.LineLeftCommand}" CommandTarget="{Binding ElementName=scrollviewer}" ClickMode="Press" Style="{DynamicResource MainColorWithoutBackgroudButtonStyle}"  local:PathDataDependencyClass.Path="{Binding Source={StaticResource LeftIcon}}"/>
                            <RepeatButton x:Name="ToRightButton" Grid.Column="3" Width="0" Height="28" VerticalAlignment="Bottom" Opacity="1" Visibility="Hidden" Command="{x:Static ScrollBar.LineRightCommand}" CommandTarget="{Binding ElementName=scrollviewer}" ClickMode="Press" Style="{DynamicResource MainColorWithoutBackgroudButtonStyle}"   local:PathDataDependencyClass.Path="{Binding Source={StaticResource RightIcon}}"/>
                        </Grid>
                        <Border x:Name="PART_Bd" Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{StaticResource MainColorBrush}">
                            <ContentPresenter ContentSource="SelectedContent" Name="PART_SelectedContentHost"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" SourceName="scrollviewer" Value="Visible">
                            <Setter TargetName="ToLeftButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToLeftButton" Property="Width" Value="20"/>
                            <Setter TargetName="ToRightButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToRightButton" Property="Width" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>